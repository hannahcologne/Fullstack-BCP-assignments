/*Leet Translator
"Leet" or 1337 is a popular alternative alphabet used by internet "hackers".
Create a translator function that takes a string and outputs that string translated to leet.
The leet codex is below, along with an array of english letters and an array of the corresponding leet characters. Use the two arrays to create a leetCodex object to use in making the translations.
*/
function translate(str) {
  
  var letters = [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' ];
  var leetChars = ['@', '8', '(', '|)', '3', 'ph', 'g', '#','l', '_|', '|<', '1', "|'|'|", '/\\/', '0', '|D', '(,)', '|2', '5', '+', '|_|', '|/', "|/|/'",'><', 'j', '2'];
  
  var leetStr = [];
  
  var obj = {}; //create a new object

  for(var i = 0; i < letters.length; i++) {
    // the loop is creating object properties for each letter and giving them 'values' (a,b,c etc)
    var character = letters[i].charAt(0); 

    // obj[character] adds a key (character) to the obj. Second for loop adds value to the property.
    for(var j = 0; j < leetChars.length; j++) {
    
    obj[character] = leetChars[i];
    
    } 
  }
  
  console.log(obj);
  
  //loop over string to find each letter
  for(var k = 0; k < str.length; k++) {
    var charInStr = str.charAt(k).toLowerCase(); 

    if(obj.hasOwnProperty(charInStr)) {
     leetStr.push(obj[charInStr]);
    }
  }
  //return the array as a string with .toString  
  return(leetStr.toString());

}

translate('Daniel')    // => '|)@/\/l31';
